#set -e
#set -u 
#set -x 

MINIKUBE_INCLUDED=true
MINISHIFT_INCLUDED=false

CFSSL_VERSION=R1.2
KUBERNETES_RELEASE=v1.13.0
KUBEBOX_VERSION=v0.4.0
KUBETAIL_VERSION=1.6.7
KUBECTX_VERSION=v0.6.3
KUBENS_VERSION=v0.6.3
KUBESPY_VERSION=v0.4.0
MINIKUBE_VERSION=v1.0.0
MINISHIFT_VERSION=v1.33.0

# Minikube configuration
MINIKUBE_HOME=${PWD}/.minikube
MINIKUBE_IN_STYLE=false
MINIKUBE_ENABLE_PROFILING=0

# default kubeconfig location
export KUBECONFIG=${HOME}/.kube/config

# if /bin not exist create
mkdir -p ${PWD}/bin

# download cfssl tools if does not exist
function download_cfssl {
  	if [ ! -f ${PWD}/bin/cfssl ] 
	then
	  	curl -sLo ${PWD}/bin/cfssl https://pkg.cfssl.org/${CFSSL_VERSION}/cfssl_linux-amd64 
  		chmod +x ${PWD}/bin/cfssl
  	fi
}

 # download cfssljson if does not exist
function download_cfssljson {
  	if [ ! -f ${PWD}/bin/cfssljson ]
  	then 
  		curl -sLo ${PWD}/bin/cfssljson https://pkg.cfssl.org/${CFSSL_VERSION}/cfssljson_linux-amd64
		chmod +x ${PWD}/bin/cfssljson
	fi
}

# download kubectl if does not exist
function download_kubectl {
	if [ ! -f ${PWD}/bin/kubectl ]
	then
		curl -sLo ${PWD}/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_RELEASE}/bin/linux/amd64/kubectl
		chmod +x ${PWD}/bin/kubectl
	fi
}

# download kubebox if does not exist
function download_kubebox {
	if [ ! -f ${PWD}/bin/kubebox ]
	then
		curl -sLo ${PWD}/bin/kubebox https://github.com/astefanutti/kubebox/releases/download/${KUBEBOX_VERSION}/kubebox-linux
		chmod +x ${PWD}/bin/kubebox
	fi
}

# download kubetail if does not exist
function download_kubetail {
	if [ ! -f ${PWD}/bin/kubetail ]
	then
		curl -sLo ${PWD}/bin/kubetail https://raw.githubusercontent.com/johanhaleby/kubetail/${KUBETAIL_VERSION}/kubetail
		chmod +x ${PWD}/bin/kubetail
	fi
}

# download kubectx if does not exist
function download_kubectx {
	if [ ! -f ${PWD}/bin/kubectx ]
	then
		curl -sLo ${PWD}/bin/kubectx https://raw.githubusercontent.com/ahmetb/kubectx/${KUBECTX_VERSION}/kubectx
		chmod +x ${PWD}/bin/kubectx
	fi
}

# download kubens if does not exist
function download_kubens {
	if [ ! -f ${PWD}/bin/kubens ]
	then
		curl -sLo ${PWD}/bin/kubens https://raw.githubusercontent.com/ahmetb/kubectx/${KUBENS_VERSION}/kubens
		chmod +x ${PWD}/bin/kubens
	fi
}

# download kubespy if does not exist
function download_kubespy {
	if [ ! -f ${PWD}/bin/kubespy ]
	then
		curl -sL https://github.com/pulumi/kubespy/releases/download/${KUBESPY_VERSION}/kubespy-linux-amd64.tar.gz | tar xz --strip-components=2 -C ${PWD}/bin
		chmod +x ${PWD}/bin/kubespy
	fi
}

# download minikube if does not exist
function download_minikube {
	if [ ! -f ${PWD}/bin/minikube ]
	then
		curl -sLo ${PWD}/bin/minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64
		chmod +x ${PWD}/bin/minikube
	fi
}

# download minishift if does not exist
function download_minishift {
	if [ ! -f ${PWD}/bin/minishift ]
	then
		curl -sL https://github.com/minishift/minishift/releases/download/${MINISHIFT_VERSION}/minishift-${MINISHIFT_VERSION:1}-linux-amd64.tgz | tar xz -C ${PWD}/bin minishift-${MINISHIFT_VERSION:1}-linux-amd64/minishift
		ls
		mv ${PWD}/bin/minishift-${MINISHIFT_VERSION:1}-linux-amd64/minishift ${PWD}/bin/
		rm -rf ${PWD}/bin/minishift-${MINISHIFT_VERSION:1}-linux-amd64/
		chmod +x ${PWD}/bin/minishift
	fi
}


case "$OSTYPE" in
  linux*)
  	download_cfssl
  	download_cfssljson
  	download_kubectl
  	download_kubebox
  	download_kubetail
  	download_kubectx
  	download_kubens
  	download_kubespy
	
	if ${MINIKUBE_INCLUDED}
	then
    	download_minikube
	fi 

	if ${MINISHIFT_INCLUDED}
	then
		echo ${MINISHIFT_INCLUDED}
    	download_minishift
	fi   
  	;;
  *) 
  	echo "unsupported OS : $OSTYPE" 
  	;;
esac

# set env PATH
export PATH="${PATH}:${PWD}/bin"

